name: Build and Release

on:
  push:
    branches: [master]
    tags: '**'
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - uses: actions/setup-node@v2
        with:
          registry-url: 'https://registry.npmjs.org'

      - name: Build
        run: |
          build () {
            dotnet publish -r $1 --no-restore --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=True -p:TrimMode=Link defgen/defgen.fsproj -o build/$1/
          }

          dotnet restore
          build linux-x64
          build win-x64
          build osx-x64

          mv build/linux-x64/defgen build/defgen-linux
          mv build/win-x64/defgen.exe build/defgen-win.exe
          mv build/osx-x64/defgen build/defgen-osx

          rm build/*/*.pdb

      - name: Generate defs
        run: |
          chmod +x build/defgen-linux
          cat defs.yml | build/defgen-linux '@cumcord' > build/defs.d.ts
          cp build/defs.d.ts npm_package/

      - name: Publish artifacts
        uses: ncipollo/release-action@v1
        with:
          artifacts: 'build/*'
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          tag: build

      - name: Publish package
        if: startsWith(github.ref, 'refs/tags/')
        working-directory: npm_package
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}